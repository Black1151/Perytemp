export const userJson = {
  pages: [
    {
      name: "user-details-section",
      title: "User Main Details",
      elements: [
        {
          type: "text",
          name: "id",
          title: "User ID",
          visible: false,
        },
        {
          type: "dropdown",
          name: "customerId",
          title: "Customer",
          isRequired: true,
          visibleIf: "{pgv_formMode} = 'new'",
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/customer/allBy`,
            path: "resource",
            valueName: "id",
            titleName: "name",
          },
        },
        {
          type: "dropdown",
          name: "role",
          title: "User Role",
          titleLocation: "top",
          startWithNewLine: false,
          placeholder: "Select Role",
          allowClear: true,
          enableIf:
            "{pgv_currentUser.role} = 'CA' or {pgv_currentUser.role} = 'PA'",
          setValueIf: "{userTypePaying} = false",
          setValueExpression: "iif({pgv_formMode} = 'new', 'EU', 'CU')",
          defaultValueExpression: "iif({pgv_formMode} = 'new', 'EU', 'CU')",
          isRequired: true,
          choices: [
            {
              value: "EU",
              text: "External User",
              visibleIf: "{userTypePaying} = false",
            },
            {
              value: "CU",
              text: "Customer User",
              visibleIf: "{userTypePaying} = true",
            },
            {
              value: "CS",
              text: "Customer Senior User",
              visibleIf: "{userTypePaying} = true",
            },
            {
              value: "CL",
              text: "Customer Leader",
              visibleIf: "{userTypePaying} = true",
            },
            {
              value: "CA",
              text: "Customer Admin",
              visibleIf: "{userTypePaying} = true",
            },
          ],
        },
        {
          type: "boolean",
          name: "isActive",
          visibleIf:
            "{pgv_currentUser.role} = 'CA' or {pgv_currentUser.role} = 'PA'",
          title: "Is this user active?",
          titleLocation: "top",
          startWithNewLine: false,
          defaultValue: true,
          isRequired: true,
          labelTrue: "Yes",
          labelFalse: "No",
          swapOrder: true,
        },
        {
          type: "boolean",
          name: "stayLoggedIn",
          enableIf:
            "{pgv_currentUser.role} = 'PA' or {pgv_currentUser.userId} == {id}",
          visibleIf:
            "{pgv_currentUser.role} = 'PA' or {pgv_currentUser.userId} == {id}",
          title: "Stay logged in?",
          titleLocation: "top",
          startWithNewLine: false,
          defaultValue: false,
          isRequired: true,
          labelTrue: "Yes",
          labelFalse: "No",
          swapOrder: true,
        },
        {
          type: "html",
          title: "Delete your data?",
          html: `
        <div>
            <button 
                style="padding: 10px 20px; background-color: var(--chakra-colors-primary); color: white; border: none; border-radius: 5px; cursor: pointer;"
                onclick="window.location.href='/delete-my-data'"
            >
                Delete My Data
            </button>
        </div>
    `,
          startWithNewLine: false,
          visibleIf: "{pgv_currentUser.userId} == {id}",
        },
        {
          type: "dropdown",
          name: "titleId",
          title: "Title",
          titleLocation: "top",
          isRequired: true,
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/surveyjs/selectItems?type=title`, // The API endpoint to fetch choices from
            path: "title",
            valueName: "value",
            titleName: "label",
          },
          placeholder: "Select title",
          allowClear: true,
        },
        {
          type: "text",
          name: "firstName",
          // width: "64%",
          // minWidth: "192px",
          title: "First name",
          titleLocation: "top",
          isRequired: true,
          placeholder: "Enter the first name of user",
        },
        {
          type: "text",
          name: "lastName",
          // width: "64%",
          // minWidth: "192px",
          title: "Surname",
          titleLocation: "top",
          startWithNewLine: false,
          isRequired: true,
          placeholder: "Enter the surname of user",
        },
        {
          type: "text",
          name: "jobTitle",
          width: "36%",
          minWidth: "256px",
          title: "Job Title",
          titleLocation: "top",
          inputType: "url",
          placeholder: "Enter the job title of contact",
        },
        {
          type: "dropdown",
          name: "departmentId",
          title: "Department",
          titleLocation: "top",
          placeholder: "Select department",
          allowClear: true,
          isRequired: true,
          visibleIf: "{userTypePaying} = true",
          enableIf: "{customerID} notempty",
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/userTeam/allBy?customerId={customerId}&parentTeamId=null`, // The API endpoint to fetch choices from
            path: "resource",
            valueName: "id",
            titleName: "name",
          },
        },
        {
          type: "dropdown",
          name: "teamId",
          title: "Team",
          titleLocation: "top",
          startWithNewLine: false,
          isRequired: false,
          visibleIf: "{userTypePaying} = true",
          placeholder: "Select team",
          allowClear: true,
          enableIf: "{customerID} notempty and {departmentId} notempty",
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/userTeam/allBy?customerId={customerId}&parentTeamId={departmentId}`, // The API endpoint to fetch choices from
            path: "resource",
            valueName: "id",
            titleName: "name",
          },
        },
        {
          type: "dropdown",
          name: "contractTypeId",
          title: "Contract Type",
          titleLocation: "top",
          isRequired: false,
          visibleIf: "{userTypePaying} = true",
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/surveyjs/selectItems?type=job_type`, // The API endpoint to fetch choices from
            path: "job_type",
            valueName: "value",
            titleName: "label",
          },
          placeholder: "Select Contract type",
          allowClear: true,
        },
        {
          type: "dropdown",
          name: "jobLevelId",
          title: "Job Level",
          titleLocation: "top",
          startWithNewLine: false,
          isRequired: false,
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/surveyjs/selectItems?type=job_level`, // The API endpoint to fetch choices from
            path: "job_level",
            valueName: "value",
            titleName: "label",
          },
          placeholder: "Select Job Level",
          allowClear: true,
        },
        {
          type: "text",
          inputType: "date",
          name: "employStartDate",
          minWidth: "256px",
          title: "Employment Start Date",
          titleLocation: "top",
          isRequired: false,
          placeholder: "Employment Start Date",
          visibleIf: "{userTypePaying} = true",
        },
      ],
    },
    {
      name: "contact-details-section",
      title: "Contact Details",
      elements: [
        {
          type: "text",
          name: "email",
          inputType: "email",
          title: "Email",
          enableIf: "{pgv_formMode} = 'new'",
          titleLocation: "top",
          isRequired: true,
          placeholder: "Enter the email of the user",
        },
        {
          type: "text",
          name: "mobile",
          title: "Mobile Number",
          minWidth: "256px",
          isRequired: false,
          descriptionLocation: "underInput",
          inputType: "tel",
          maskType: "pattern",
          maskSettings: {
            pattern: "9999 9999999",
          },
        },
        {
          type: "text",
          name: "telephone",
          title: "Telephone Number",
          minWidth: "256px",
          startWithNewLine: false,
          isRequired: false,
          inputType: "tel",
          maskType: "pattern",
          maskSettings: {
            pattern: "9999 9999999",
          },
        },
        {
          type: "text",
          name: "vehicleRegistration",
          title: "Vehicle Registration",
          titleLocation: "top",
          placeholder: "Enter vehicle reg of the user",
          isRequired: false,
          visibleIf: "{userTypePaying} = true",
        },
        {
          type: "boolean",
          name: "remoteWorker",
          minWidth: "256px",
          title: "Are you primarily a remote worker?",
          titleLocation: "top",
          description: "You are not office based, often work remotely",
          descriptionLocation: "underInput",
          defaultValue: false,
          isRequired: true,
          labelTrue: "Yes",
          labelFalse: "No",
        },
        {
          type: "dropdown",
          name: "siteId",
          minWidth: "256px",
          title: "Main Office Base (Site)",
          titleLocation: "top",
          placeholder: "Select your company site / office you are based at",
          allowClear: true,
          visibleIf: "{remoteWorker} = false",
          isRequired: true,
          enableIf: "{customerID} notempty",
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/site/allBy?customerId={customerId}`, // The API endpoint to fetch choices from
            path: "resource",
            valueName: "id",
            titleName: "siteName",
          },
        },
        {
          type: "dropdown",
          name: "marketingOptOutId",
          minWidth: "256px",
          title: "GDPR / Marketing",
          titleLocation: "top",
          description: "Select the appropriate option for the user.",
          descriptionLocation: "underInput",
          isRequired: true,
          visibleIf: "{userTypePaying} = false",
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/surveyjs/selectItems?type=marketing_opt_out`, // The API endpoint to fetch choices from
            path: "marketing_opt_out",
            valueName: "value",
            titleName: "label",
          },
          placeholder: "Select appropriate option",
          allowClear: true,
        },
      ],
    },
    {
      name: "user-about-section",
      title: "About",
      visibleIf: "{userTypePaying} = true",
      elements: [
        {
          type: "comment",
          name: "aboutMe",
          rows: 3,
          autoGrow: true,
          maxLength: 500,
          minWidth: "256px",
          title: "Profile Bio",
          titleLocation: "top",
          isRequired: false,
          placeholder: "Enter user profile bio information here",
        },
      ],
    },
    {
      name: "projects-section",
      title: "Projects",
      visibleIf: "{userTypePaying} = true",
      elements: [
        {
          type: "paneldynamic",
          name: "projects",
          title: "Add Projects",
          templateElements: [
            {
              type: "text",
              name: "project",
              title: "Project",
              titleLocation: "top",
              isRequired: true,
              placeholder: "Enter project name",
            },
            {
              type: "comment",
              name: "description",
              title: "Description",
              titleLocation: "top",
              isRequired: true,
              placeholder: "Enter project details",
            },
            {
              type: "text",
              name: "whereAt",
              title: "Where did you complete this project?",
              titleLocation: "top",
              isRequired: true,
              placeholder: "Remote / Online / Company",
            },
            {
              type: "text",
              name: "startDate",
              inputType: "date",
              title: "Date Started",
              titleLocation: "top",
              isRequired: true,
              placeholder: "Enter date project started",
            },
            {
              type: "text",
              name: "endDate",
              inputType: "date",
              title: "Date Completed",
              titleLocation: "top",
              startWithNewLine: false,
              isRequired: true,
              placeholder: "Enter date project completed",
            },
          ],
          panelCount: 0,
          minPanelCount: 0,
          panelAddText: "Add New Project",
          confirmDelete: true,
          confirmDeleteText: "Are you sure you want to delete this project?",
          noEntriesText:
            "No project entered yet.\nClick 'Add New Project' to add a new entry.\nClick 'Remove' to delete an existing entry.",
        },
      ],
    },
    {
      name: "user-skills-section",
      title: "Skills & Expertise",
      visibleIf: "{userTypePaying} = true",
      elements: [
        {
          type: "paneldynamic",
          name: "skills",
          title: "Add Skills",
          templateElements: [
            {
              type: "text",
              name: "skill",
              title: "Skill",
              titleLocation: "top",
              isRequired: true,
              placeholder: "Enter skill or expertise",
            },
            {
              type: "dropdown",
              name: "proficiencyId",
              minWidth: "256px",
              title: "Level",
              titleLocation: "top",
              startWithNewLine: false,
              isRequired: true,
              choicesByUrl: {
                url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/surveyjs/selectItems?type=proficiency`, // The API endpoint to fetch choices from
                path: "proficiency",
                valueName: "value",
                titleName: "label",
              },
              placeholder: "Select level",
              allowClear: true,
            },
          ],
          panelCount: 0,
          minPanelCount: 0,
          panelAddText: "Add New Skill",
          confirmDelete: true,
          confirmDeleteText: "Are you sure you want to delete this skill?",
          noEntriesText:
            "No skills entered yet.\nClick 'Add New Skill' to add a new entry.\nClick 'Remove' to delete an existing entry.",
        },
      ],
    },
    {
      name: "user-qualifications-section",
      title: "Qualifications & Training",
      visibleIf: "{userTypePaying} = true",
      elements: [
        {
          type: "paneldynamic",
          name: "training",
          title: "Add Qualifications",
          templateElements: [
            {
              type: "text",
              name: "training",
              title: "Qualification",
              titleLocation: "top",
              isRequired: true,
              placeholder: "Enter qualification or training",
            },
            {
              type: "text",
              name: "startDate",
              inputType: "date",
              title: "Date Started",
              titleLocation: "top",
              isRequired: true,
              placeholder: "Enter date training started",
            },
            {
              type: "text",
              name: "endDate",
              inputType: "date",
              title: "Date Achieved",
              titleLocation: "top",
              startWithNewLine: false,
              isRequired: true,
              placeholder: "Enter date achieved",
            },
          ],
          panelCount: 0,
          minPanelCount: 0,
          panelAddText: "Add New Qualification",
          confirmDelete: true,
          confirmDeleteText:
            "Are you sure you want to delete this qualification?",
          noEntriesText:
            "No qualifications entered yet.\nClick 'Add New Qualification' to add a new entry.\nClick 'Remove' to delete an existing entry.",
        },
      ],
    },
    {
      name: "user-sectorexperience-section",
      title: "Sector Experience",
      visibleIf: "{userTypePaying} = true",
      elements: [
        {
          type: "paneldynamic",
          name: "sectorExperiences",
          title: "Add Sector Experiences",
          templateElements: [
            {
              type: "dropdown",
              name: "sectorId",
              width: "64%",
              minWidth: "192px",
              title: "Sector",
              titleLocation: "top",
              description: "Select the sector",
              descriptionLocation: "underInput",
              isRequired: true,
              choicesByUrl: {
                url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/surveyjs/selectItems?type=sector`, // The API endpoint to fetch choices from
                path: "sector",
                valueName: "value",
                titleName: "label",
              },
              placeholder: "Select Sector",
              allowClear: true,
            },
            {
              type: "comment",
              name: "description",
              rows: 3,
              autoGrow: true,
              maxLength: 300,
              minWidth: "256px",
              title: "Details",
              titleLocation: "top",
              isRequired: false,
              placeholder: "Enter experience details here",
            },
          ],
          panelCount: 0,
          minPanelCount: 0,
          panelAddText: "Add New Experience",
          confirmDelete: true,
          confirmDeleteText: "Are you sure you want to delete this experience?",
          noEntriesText:
            "No experiences entered yet.\nClick 'Add New Experience' to add a new entry.\nClick 'Remove' to delete an existing entry.",
        },
      ],
    },
    {
      name: "user-languages-section",
      title: "Languages",
      visibleIf: "{userTypePaying} = true",
      elements: [
        {
          type: "paneldynamic",
          name: "languages",
          title: "Add Languages",
          templateElements: [
            {
              type: "dropdown",
              name: "languageId",
              minWidth: "256px",
              title: "Language",
              titleLocation: "top",
              startWithNewLine: false,
              isRequired: true,
              choicesByUrl: {
                url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/surveyjs/selectItems?type=language`,
                path: "language",
                valueName: "value",
                titleName: "label",
              },
              placeholder: "Select language",
              allowClear: true,
            },
            {
              type: "dropdown",
              name: "proficiencyId",
              minWidth: "256px",
              title: "Level",
              titleLocation: "top",
              startWithNewLine: false,
              isRequired: true,
              choicesByUrl: {
                url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/surveyjs/selectItems?type=proficiency`, // The API endpoint to fetch choices from
                path: "proficiency",
                valueName: "value",
                titleName: "label",
              },
              placeholder: "Select level",
              allowClear: true,
            },
          ],
          panelCount: 0,
          minPanelCount: 0,
          panelAddText: "Add New Language",
          confirmDelete: true,
          confirmDeleteText: "Are you sure you want to delete this language?",
          noEntriesText:
            "No languages entered yet.\nClick 'Add New Language' to add a new entry.\nClick 'Remove' to delete an existing entry.",
        },
      ],
    },
    {
      name: "user-interests-section",
      title: "Interests",
      visibleIf: "{userTypePaying} = true",
      elements: [
        {
          type: "matrixdynamic",
          name: "hobbiesAndInterests",
          title: "Add Interests",
          columns: [
            {
              title: "Interest",
              name: "hobby",
              cellType: "text",
              isRequired: true,
              maxLength: 80,
              placeholder: "Enter interest",
            },
            {
              title: "Details",
              name: "description",
              cellType: "text",
              isRequired: false,
              maxLength: 80,
              placeholder: "Enter information you want to about the hobby",
            },
          ],
          rowCount: 0,
          confirmDelete: true,
          confirmDeleteText: "Are you sure you want to delete this interest?",
          addRowText: "Add an Interest",
          removeRowText: "Delete this Interest",
          hideColumnsIfEmpty: true,
          emptyRowsText:
            "No interests entered yet.\nClick 'Add an Interest' to add a new one.\nClick the delete icon to remove an existing entry.",
        },
      ],
    },
  ],
  calculatedValues: [
    {
      name: "userTypePaying",
      expression: "iif({pgv_formMode} = 'new' or {role} = 'EU', false, true)",
      includeIntoResult: false,
    },
  ],
};
