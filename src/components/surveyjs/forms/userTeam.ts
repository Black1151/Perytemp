export const userTeamJson = {
  pages: [
    {
      name: "user-team-details",
      title: "{teamTypeName}",
      elements: [
        {
          type: "boolean",
          name: "isActive",
          title: "Is {teamTypeName} active?",
          titleLocation: "top",
          defaultValue: true,
          isRequired: true,
          labelTrue: "Yes",
          labelFalse: "No",
          swapOrder: true,
        },
        {
          type: "text",
          name: "customerId",
          isRequired: true,
          visibleIf: "{pgv_currentUser.role} = 'PA'",
          title: "Customer",
          enableIf: "{pgv_currentUser.role} = 'PA'",
          defaultValueExpression: "{pgv_currentUser.customerId}",
        },
        {
          type: "boolean",
          name: "isDepartment",
          title: "Department or Team?",
          titleLocation: "top",
          defaultValue: true,
          swapOrder: true,
          isRequired: true,
          labelTrue: "Department",
          labelFalse: "Team",
        },
        {
          type: "boolean",
          name: "isService",
          title: "Is it a Service?",
          titleLocation: "top",
          defaultValue: true,
          swapOrder: true,
          isRequired: false,
          labelTrue: "Yes",
          labelFalse: "No",
        },
        {
          type: "dropdown",
          name: "parentTeamId",
          title: "Parent Department",
          titleLocation: "top",
          startWithNewLine: true,
          isRequired: true,
          visibleIf: "{isDepartment} != true",
          enableIf: "{customerId} notempty",
          placeholder: "Select the department this team is in",
          description:
            "If there is a parent department, this record becomes a team",
          descriptionLocation: "underInput",
          allowClear: true,
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/userTeam/allBy?customerId={customerId}&parentTeamId=null`,
            path: "resource",
            valueName: "id",
            titleName: "name",
          },
        },
        {
          type: "text",
          name: "name",
          title: "{teamTypeName} Name",
          titleLocation: "top",
          isRequired: true,
          maxLength: 200,
          placeholder: "Enter name",
          readOnly: false,
        },
        {
          type: "comment",
          name: "description",
          title: "Description",
          titleLocation: "top",
          maxLength: 300,
          placeholder: "Enter description",
          readOnly: false,
        },
        {
          type: "dropdown",
          name: "managerId",
          title: "Manager of this {teamTypeName}",
          titleLocation: "top",
          placeholder: "Select Manager",
          enableIf: "{customerId} notempty",
          choicesByUrl: {
            url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/user/allBy?customerId={customerId}`,
            path: "resource",
            valueName: "id",
            titleName: "email",
          },
        },
      ],
    },
  ],
  calculatedValues: [
    {
      name: "teamTypeName",
      expression: "iif({isDepartment}, 'Department', 'Team')",
    },
  ],
};
